{"ast":null,"code":"var _jsxFileName = \"/Users/pc/Desktop/App-Rick-&-Morty/riki/src/components/Card/Card.jsx\",\n  _s = $RefreshSig$();\nimport styled from \"styled-components\";\nimport styles from \"./Card.module.css\";\nimport { Link } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { addFavorite, deleteFavorite } from \"../../redux/actions/actions\";\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Img = styled.img`\n   border-radius: 50%;\n   box-shadow: 2px -6px 10px #fff;\n`;\n_c = Img;\nconst Title = styled.h1`\n   color: beige;\n   font-weight: bold;\n   display: flex;\n   justify-content: center;\n`;\n_c2 = Title;\nconst Text = styled.h2`\n   color: #efe;\n   font-size: 1.2rem;\n   font-weight: 400;\n   display: flex;\n   justify-content: center;\n`;\n_c3 = Text;\nconst Button1 = styled.button` \nbackground-color: rgb(200 0 0);\nfont-weight:bold;\ncolor: white;\nborder 1px solid white;\nborder-radius: 5px\n`;\n_c4 = Button1;\nexport function Card(props) {\n  _s();\n  const [isFav, setIsFav] = useState(false);\n  function handleFavorite() {\n    if (isFav) {\n      setIsFav(false);\n      props.deleteFavorite(props.id);\n    } else {\n      setIsFav(true);\n      props.addFavorite(props);\n    }\n  }\n  useEffect(() => {\n    var _props$myFavorites;\n    (_props$myFavorites = props.myFavorites) === null || _props$myFavorites === void 0 ? void 0 : _props$myFavorites.forEach(fav => {\n      if (fav.id === props.id) {\n        setIsFav(true);\n      }\n    });\n  }, [props.myFavorites]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.buttonContainer,\n      children: [isFav ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleFavorite,\n        children: \"\\u2764\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 16\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleFavorite,\n        children: \"\\uD83E\\uDD0D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(Button1, {\n        onClick: () => props.onClose(props.id),\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: `/detail/${props.id}`,\n      style: {\n        textDecoration: 'none'\n      },\n      children: /*#__PURE__*/_jsxDEV(Title, {\n        children: props.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 76\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(Img, {\n      src: props.image,\n      alt: \"img not found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.textContainer,\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        children: props.species\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        children: props.gender\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 7\n  }, this);\n}\n_s(Card, \"P/ohr7L6r3Ai4GOhTgqo0B9M8uQ=\");\n_c5 = Card;\nexport function mapDispatchToProps(dispatch) {\n  return {\n    addFavorite: function (fav) {\n      dispatch(addFavorite(fav));\n    },\n    deleteFavorite: function (id) {\n      dispatch(deleteFavorite(id));\n    }\n  };\n}\nexport function mapStateToProps(state) {\n  return {\n    myFavorites: state.myFavorites\n  };\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Card);\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"Img\");\n$RefreshReg$(_c2, \"Title\");\n$RefreshReg$(_c3, \"Text\");\n$RefreshReg$(_c4, \"Button1\");\n$RefreshReg$(_c5, \"Card\");","map":{"version":3,"names":["styled","styles","Link","useState","useEffect","addFavorite","deleteFavorite","connect","Img","img","Title","h1","Text","h2","Button1","button","Card","props","isFav","setIsFav","handleFavorite","id","myFavorites","forEach","fav","container","buttonContainer","onClose","textDecoration","name","image","textContainer","species","gender","mapDispatchToProps","dispatch","mapStateToProps","state"],"sources":["/Users/pc/Desktop/App-Rick-&-Morty/riki/src/components/Card/Card.jsx"],"sourcesContent":["import styled from \"styled-components\";\nimport styles from \"./Card.module.css\";\nimport { Link } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { addFavorite, deleteFavorite } from \"../../redux/actions/actions\";\nimport { connect } from \"react-redux\";\n\nconst Img = styled.img`\n   border-radius: 50%;\n   box-shadow: 2px -6px 10px #fff;\n`;\n\nconst Title = styled.h1`\n   color: beige;\n   font-weight: bold;\n   display: flex;\n   justify-content: center;\n`;\n\nconst Text = styled.h2`\n   color: #efe;\n   font-size: 1.2rem;\n   font-weight: 400;\n   display: flex;\n   justify-content: center;\n`;\nconst Button1 = styled.button` \nbackground-color: rgb(200 0 0);\nfont-weight:bold;\ncolor: white;\nborder 1px solid white;\nborder-radius: 5px\n`;\n\nexport function Card(props) {\n\n   const [isFav, setIsFav] = useState(false);\n\n   function handleFavorite(){\n      if(isFav){\n         setIsFav(false)\n         props.deleteFavorite(props.id)\n      }else {\n         setIsFav(true)\n         props.addFavorite(props)\n      }\n   }\n\n   useEffect(() => {\n   props.myFavorites?.forEach((fav) => {\n         if (fav.id === props.id) {\n            setIsFav(true);\n         }\n      });\n   }, [props.myFavorites]);\n\n   return (\n      <div className={styles.container}>\n         <div className={styles.buttonContainer}>\n            {isFav ? (\n               <button onClick={handleFavorite}>‚ù§Ô∏è</button>\n            ) : (\n               <button onClick={handleFavorite}>ü§ç</button>\n            )}\n            <Button1 onClick={() => props.onClose(props.id)}>X</Button1>\n         </div>\n         <Link to={`/detail/${props.id}`} style={{textDecoration: 'none'}}><Title>{props.name}</Title></Link>\n         <Img  src={props.image} alt=\"img not found\" />\n         <div className={styles.textContainer}>\n            <Text>{props.species}</Text>\n            <Text>{props.gender}</Text>\n         </div>\n      </div>\n   );\n}\n\nexport function mapDispatchToProps(dispatch){\n   return {\n      addFavorite: function(fav){\n         dispatch(addFavorite(fav))\n      },\n\n      deleteFavorite: function(id){\n         dispatch(deleteFavorite(id))\n      }\n   }\n}\n\nexport function mapStateToProps (state){\n   return {\n      myFavorites: state.myFavorites\n   }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Card);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}